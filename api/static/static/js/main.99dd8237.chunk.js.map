{"version":3,"sources":["components/Component.js","pages/Page.js","components/Uptime.js","reducer.js","store.js","actions.js","websocket.js","components/LoadingIndicator.js","components/ServerModal.js","pages/Dashboard.js","pages/Test.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Component","args","___state_update_locks___","Queue","___state_update_in_progress","onChangeHandlerGenerator","bind","setInputValue","Promise","resolve","enqueue","___process_next_update___","this","peek","dequeue","object","a","___lock_state_update___","newState","state","setState","___unlock_state_update___","name","value","values","_updateState","arg","target","componentInstance","React","Page","props","window","App","history","redirect","path","push","_componentDidMount","scrollTo","className","_render","Uptime","updateInterval","uptime","updateUptime","status","down_time","total_time","downTimeAfterStatusChange","timer","clearInterval","Date","now","reset","getTime","last_status_update","setInterval","prevProps","hasServerChanged","server_name","hasBeenReset","toString","initializeUptime","toFixed","serverUpdateReducer","payload","changes","servers","map","server","reducer","action","type","store","createStore","actions","addServer","dispatch","setServers","Array","isArray","updateServer","protocol","location","replace","host","websocketURL","connect","websocket","connected","WebSocket","onopen","onConnectedHandler","onclose","reconnect","onmessage","onMessageHandler","setTimeout","sendToServer","message","JSON","stringify","send","hasReceivedServers","data","parse","response","requestID","success","requests","get","reject","clearTimeout","delete","removeRequestObject","processResponse","err","init","Map","request","uuid","set","instance","divStyle","justifyContent","alignItems","position","left","top","right","bottom","background","zIndex","LoadingIndicator","display","id","style","variant","hideLoading","hide","showLoading","show","alert","ServerModal","resetServer","disk_usage","disk_space","cpu_usage","failed_login_attempts","Dialog","open","DialogTitle","DialogContent","Table","TableBody","TableRow","TableCell","color","parseFloat","parseInt","date","DialogActions","Button","onClick","size","close","Dashboard","serverIndex","serverModalOpen","openServerModal","closeServerModal","event","currentTarget","getAttribute","padding","TableHead","index","Test","toggleStatus","setNavbarHeight","navbarHeight","document","getElementById","offsetHeight","documentElement","setProperty","Navbar","resizeObserver","ResizeObserver","observe","disconnect","AppBar","marginLeft","initWebsockets","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.99dd8237.chunk.js","sourcesContent":["\nimport React from 'react';\nimport Queue from 'queue-fifo';\n\n\n\nclass Component extends React.Component {\n\n\n\tconstructor(...args) {\n\n\t\tsuper(...args);\n\n\t\tthis.onChangeHandlerGenerator.bind(this);\n\t\tthis.setInputValue = this.setInputValue.bind(this)\n\t}\n\n\n\t___state_update_locks___ = new Queue();\n\t___state_update_in_progress = false;\n\n\n\t___lock_state_update___() {\n\n\t\treturn new Promise(resolve => {\n\n\t\t\tconst queue = this.___state_update_locks___;\n\t\t\tqueue.enqueue(resolve);\n\n\t\t\tif (!this.___state_update_in_progress) {\n\t\t\t\tthis.___state_update_in_progress = true;\n\t\t\t\tthis.___process_next_update___();\n\t\t\t}\n\t\t\t\n\t\t});\n\n\t}\n\n\n\t___process_next_update___() {\n\n\t\tconst resolve = this.___state_update_locks___.peek();\n\n\t\tif (!resolve) {\n\t\t\tthis.___state_update_in_progress = false;\n\t\t\treturn;\n\t\t}\n\n\t\tresolve();\n\n\t}\n\n\t___unlock_state_update___() {\n\t\tthis.___state_update_locks___.dequeue(); // remove my lock;\n\t\tthis.___process_next_update___();\n\t}\n\n\t\n\n\tasync _updateState(object) {\n\t\tawait this.___lock_state_update___();\n\t\tconst newState = { ...(this.state || {} ), ...object };\n\t\tawait this.setState(newState);\n\t\tthis.___unlock_state_update___();\n\t}\n\n\tasync setInputValue(name, value) {\n\t\tconst values = this.state.values;\n\t\tvalues[name] = value;\n\t\tawait this._updateState({ values })\n\t}\n\n\tonChangeHandlerGenerator(name) {\n\n\t\treturn (function(arg) {\n\n\t\t\tlet value;\n\n\t\t\tif (typeof arg == 'object')\n\t\t\t\tvalue = arg.target.value;\n\t\t\telse\n\t\t\t\tvalue = arg;\n\n\t\t\tconst values = (this.componentInstance.state || {} ).values || {};\n\t\t\tvalues[this.name] = value;\n\n\t\t\tthis.componentInstance._updateState({ values });\n\n\t\t}).bind({ componentInstance: this, name });\n\t}\n\n\trender() {\n\t\treturn <p>\n\t\t\tPlease implement <code>render()</code>\n\t\t</p>\n\t}\n}\n\n\nexport default Component;","\nimport Component from '../components/Component';\n\n\nclass Page extends Component {\n\n\tconstructor(props) {\n\t\t\n\t\tsuper(props);\n\n\n\t\tif (!window.App.history) {\n\t\t\twindow.App.history = props.history;\n\t\t\t\n\t\t\t// creating a function to redirect SPAically \n\t\t\tconst redirect = (path) => {\n\t\t\t\twindow.App.history.push(path);\n\t\t\t}\n\n\t\t\twindow.App.redirect = redirect;\n\t\t\tPage.redirect = redirect;\n\n\t\t}\n\n\n\t}\n\n\t_componentDidMount() {\n\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this._componentDidMount();\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\t_render() {\n\t\treturn <h1>Please implement <code>_render()</code></h1>\n\t}\n\n\trender() {\n\t\treturn <div className=\"page\">\n\t\t\t{this._render()}\n\t\t</div>\n\t}\n\n}\n\nexport default Page;","\nimport Component from './Component';\n\n\nclass Uptime extends Component {\n\n\tupdateInterval = 1000;\n\n\tstate = {\n\t\tuptime: 0\n\t}\n\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.updateUptime = this.updateUptime.bind(this);\n\t}\n\n\n\tupdateUptime() {\n\n\t\tif (this.props.status !== 'UP') {\n\t\t\tthis.down_time += this.updateInterval;\n\t\t}\n\n\t\tthis.total_time += this.updateInterval;\n\n\t\tconst uptime = 100 * (1 - (this.down_time / this.total_time));\n\t\tthis._updateState({ uptime });\n\t}\n\n\n\tinitializeUptime() {\n\n\t\tif (this.timer)\n\t\t\tclearInterval(this.timer);\n\n\n\t\t// calculate total time and down time\n\t\tthis.total_time = Date.now() - (new Date(this.props.reset)).getTime();\n\n\t\tlet downTimeAfterStatusChange;\n\n\t\tif (this.props.status === 'UP') {\n\t\t\tdownTimeAfterStatusChange = 0;\n\t\t} else {\n\t\t\tdownTimeAfterStatusChange = Date.now() - (new Date(this.props.last_status_update)).getTime();\n\t\t}\n\n\t\tthis.down_time = this.props.down_time + downTimeAfterStatusChange;\n\t\tthis.updateUptime();\n\n\t\t// set timer\n\t\tthis.timer = setInterval(this.updateUptime, this.updateInterval);\n\n\t}\n\n\n\tcomponentDidUpdate(prevProps) {\n\n\t\tconst hasServerChanged = prevProps.server_name !== this.props.server_name;\n\t\tconst hasBeenReset = prevProps.reset.toString() !== this.props.reset.toString();\n\n\t\tif (hasServerChanged || hasBeenReset) {\n\t\t\tthis.initializeUptime();\n\t\t}\n\n\t}\n\n\n\tcomponentDidMount() {\n\n\t\tthis.initializeUptime();\n\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\trender() {\n\n\t\t// \n\t\treturn <span>\n\t\t\t{this.state.uptime.toFixed(3)}%\n\t\t</span>\n\t}\n}\n\nexport default Uptime;","\n\nfunction serverUpdateReducer(state, payload) {\n\n\tconst { name, changes } = payload;\n\n\tconst servers = state.servers.map(server => {\n\n\t\tif (server.name === name) {\n\t\t\treturn { ...server, ...changes };\n\t\t} else {\n\t\t\treturn server;\n\t\t}\n\n\t});\n\n\treturn { ...state, servers };\n\t\n}\n\n\nfunction reducer(state, action={}) {\n\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\n\t\tcase 'set-servers':\n\t\t\treturn { ...state, servers: payload }\n\n\t\tcase 'add-server':\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tservers: [\n\t\t\t\t\t...state.servers,\n\t\t\t\t\tpayload\n\t\t\t\t]\n\t\t\t}\n\n\n\t\tcase 'update-server':\n\n\t\t\treturn serverUpdateReducer(state, payload);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","\n\nimport reducer from './reducer';\nimport { createStore } from 'redux';\n\nconst initialState = {\n\tservers: []\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;","\nimport store from './store';\n\n\nfunction addServer(server) {\n\n\tif (server && (typeof server === 'string'))\n\t\treturn;\n\n\tconst action = {\n\t\ttype: 'add-server',\n\t\tpayload: server\n\t}\n\n\tstore.dispatch(action);\n\t\n}\n\nfunction setServers(servers) {\n\n\tif (!Array.isArray(servers))\n\t\treturn;\n\n\tconst action = {\n\t\ttype: 'set-servers',\n\t\tpayload: servers\n\t}\n\n\tstore.dispatch(action);\n\n}\n\n\nfunction updateServer(name, changes) {\n\n\tconst action = {\n\t\ttype: 'update-server',\n\t\tpayload: {\n\t\t\tname,\n\t\t\tchanges\n\t\t}\n\t}\n\n\tstore.dispatch(action);\n}\n\nconst actions = {\n\taddServer,\n\tsetServers,\n\tupdateServer\n}\n\n\nexport default actions;","\nimport actions from './actions';\nimport { v4 as uuid } from 'uuid';\n\n\nconst protocol = window.location.protocol.replace('http', 'ws');\nconst host = window.location.host;\nconst websocketURL = `${protocol}//${host}`;\n\nfunction connect () {\n\n\tif (websocket && websocket.connected)\n\t\treturn;\n\n\twebsocket = new window.WebSocket(websocketURL);\n\n\twebsocket.onopen = onConnectedHandler;\n\twebsocket.onclose = reconnect;\n\t// websocket.onerror = reconnect;\n\twebsocket.onmessage = onMessageHandler;\n}\n\nfunction reconnect() {\n\n\tif (websocket && websocket.connected)\n\t\treturn;\n\n\tsetTimeout(connect, 3000);\n}\n\n\nfunction sendToServer(type, payload) {\n\tconst message = JSON.stringify({ type, payload });\n\twebsocket.send(message);\n}\n\n\nfunction onConnectedHandler() {\n\n\t// request servers\n\tif (!hasReceivedServers)\n\t\tsendToServer('get-servers');\n}\n\n\nfunction onMessageHandler({ data }) {\n\n\ttry {\n\t\tconst message = JSON.parse(data);\n\t\tconst { type, payload } = message;\n\n\t\tswitch (type) {\n\n\t\t\tcase 'servers':\n\n\t\t\t\tactions.setServers(payload);\n\t\t\t\thasReceivedServers = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'changes':\n\t\t\t\n\t\t\t\tconst { changes, name } = payload\n\t\t\t\tactions.updateServer(name, changes);\n\t\t\t\tbreak;\n\n\n\t\t\tcase 'response':\n\n\t\t\t\tprocessResponse(payload);\n\t\t\t\tbreak;\n\n\t\t\tcase 'add-server':\n\n\t\t\t\tconst server = payload.server;\n\t\t\t\tactions.addServer(server);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t} catch (err) {\n\t\treturn;\n\t}\n}\n\n\nfunction init() {\n\tconnect();\n}\n\n\nconst requests = new Map();\n\nfunction removeRequestObject(requestID) {\n\trequests.delete(requestID);\n}\n\n\nfunction processResponse(response) {\n\n\tconst { requestID, success, payload } = response;\n\n\tconst { resolve, reject, timer } = requests.get(requestID) || {\n\t\tresolve:() => {},\n\t\treject: () => {}\n\t}\n\n\tclearTimeout(timer);\n\tremoveRequestObject(requestID);\n\n\tif (success)\n\t\tresolve(payload);\n\telse\n\t\treject(payload);\n\n}\n\n\nfunction request(type, payload) {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tconst requestID = uuid();\n\t\tconst timer = setTimeout(() => {\n\n\t\t}, 30000);\n\n\t\trequests.set(requestID, { resolve, reject , timer });\n\n\t\tsendToServer('request', {\n\t\t\trequestID,\n\t\t\tpayload,\n\t\t\ttype,\n\t\t});\n\n\t});\n}\n\n\n\n\n\nlet websocket, hasReceivedServers = false;\n\n\nconst _exports = {\n\tinit,\n\trequest\n}\n\nexport default _exports;\nexport { init, request }","\n\nimport Component from './Component';\nimport Progress from '@mui/material/CircularProgress';\n\nlet instance;\n\n// styles\nconst divStyle = {\n\tjustifyContent: 'center',\n\talignItems: 'center',\n\tposition: 'fixed',\n\tleft: 0,\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tbackground: 'white', //rgba(0, 0, 0, 0.8)',\n\tzIndex: 2000,\n};\n\n\n// component definition\n\nclass LoadingIndicator extends Component {\n\n\tstate = {\n\t\tdisplay: 'none'\n\t}\n\n\tconstructor(...args) {\n\n\t\tsuper(...args);\n\n\t\t// if (instance)\n\t\t// \treturn instance;\n\n\t\tinstance = this;\n\n\t}\n\n\tasync hide() {\n\t\tawait this._updateState({ display: 'none' });\n\t\t// alert('none');\n\t}\n\n\tasync show() {\n\t\tawait this._updateState({ display: 'flex' });\n\t\t// alert('flex');\n\t}\n\n\trender() {\n\n\t\tconst display = this.state.display;\n\n\t\treturn <div id=\"div-loading\" style={{ ...divStyle, display }}>\n\t\t\t<Progress variant=\"indeterminate\" id=\"div-loading-indicator\" />\n\t\t</div>\n\t}\n}\n\nexport default LoadingIndicator;\n\nfunction hideLoading() {\n\ttry {\n\t\tinstance.hide();\n\t} catch(err) {}\n}\n\nfunction showLoading() {\n\ttry {\n\t\tinstance.show();\n\t} catch(err) {\n\t\talert(err.toString())\n\t}\n}\n\nexport {\n\thideLoading,\n\tshowLoading\n}","\n\nimport Component from './Component';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Button from '@mui/material/Button';\nimport Uptime from './Uptime';\nimport TimeAgo from 'react-timeago';\nimport { request } from '../websocket';\nimport { hideLoading, showLoading } from './LoadingIndicator';\n\n\n\nclass ServerModal extends Component {\n\n\tconstructor(...args) {\n\n\t\tsuper(...args);\n\n\t\tthis.resetServer = this.resetServer.bind(this);\n\n\t}\n\n\n\n\n\n\tasync resetServer() {\n\n\t\tshowLoading();\n\n\t\ttry {\n\n\t\t\tawait request('reset-server', { name: this.props.data.name });\n\n\t\t} catch (err) {\n\t\t\talert('Something went wrong, try again.');\n\t\t}\n\n\t\thideLoading();\n\t}\n\n\n\trender() {\n\n\n\t\tconst {\n\t\t\tstatus='', \n\t\t\tname='', \n\t\t\tdisk_usage='', \n\t\t\tdisk_space='', \n\t\t\tcpu_usage='',\n\t\t\treset=0,\n\t\t\tdown_time=0,\n\t\t\tlast_status_update=0,\n\t\t\tfailed_login_attempts=0\n\t\t} = this.props.data || {};\n\n\t\treturn <Dialog open={this.props.open}>\n\n\t\t\t<DialogTitle>Server Info</DialogTitle>\n\n\t\t\t<DialogContent>\n\n\t\t\t\t<Table>\n\t\t\t\t\t<TableBody>\n\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<b>Server Name</b>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{name}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<b>Status</b>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: status === 'UP' ? 'green' : 'red'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{status}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<b>CPU Usage</b>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{cpu_usage}%</TableCell>\n\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<b>Disk Usage</b>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: disk_usage < 70 ? 'green' : 'red'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{parseFloat(disk_usage.toString()).toFixed(2)}% of {parseInt(disk_space)}GB\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<b>Uptime</b>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<Uptime\n\t\t\t\t\t\t\t\t\treset={reset}\n\t\t\t\t\t\t\t\t\tlast_status_update={last_status_update}\n\t\t\t\t\t\t\t\t\tdown_time={down_time}\n\t\t\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t\t\t\tserver_name={name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<b>Failed Login Attempts</b>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: 'red'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>{failed_login_attempts}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<b>Last Reset</b>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<TimeAgo date={reset} />\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</DialogContent>\n\n\t\t\t<DialogActions>\n\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.resetServer}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: 'red'\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t>\n\t\t\t\t\tRESET\n\t\t\t\t</Button>\n\n\t\t\t\t<Button onClick={this.props.close}>\n\t\t\t\t\tCLOSE\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\n\t\t</Dialog>\n\t}\n}\n\n\nexport default ServerModal;","\nimport Page from './Page';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableBody from '@mui/material/TableBody';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport { connect } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport ServerModal from '../components/ServerModal';\n// import actions from '../actions';\n\n\nclass Dashboard extends Page {\n\n\n\tconstructor(...args) {\n\n\t\tsuper(...args);\n\n\t\tthis.openServerModal = this.openServerModal.bind(this);\n\t\tthis.closeServerModal = this.closeServerModal.bind(this);\n\n\t}\n\n\n\topenServerModal(event) {\n\n\t\tlet serverIndex = event.currentTarget.getAttribute('data-server-index');\n\t\tserverIndex = parseInt(serverIndex);\n\n\t\tthis._updateState({ serverIndex, serverModalOpen: true });\n\n\t}\n\n\n\tcloseServerModal() {\n\t\tthis._updateState({ serverModalOpen: false });\n\t}\n\n\n\tstate = {\n\t\tserverIndex: 0,\n\t\tserverModalOpen: false\n\t}\n\n\n\t_render() {\n\n\t\treturn <div style={{ padding: 10 }}>\n\t\t\t\n\t\t\t<h1\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: 'grey'\n\t\t\t\t}}\n\t\t\t>SERVERS</h1>\n\n\t\t\t<Table>\n\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell><b>NAME</b></TableCell>\n\t\t\t\t\t\t<TableCell><b>STATUS</b></TableCell>\n\t\t\t\t\t\t<TableCell><b>DISK USAGE</b></TableCell>\n\t\t\t\t\t\t<TableCell></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\n\t\t\t\t<TableBody>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.servers.map((server, index) => {\n\n\t\t\t\t\t\t\tconst { name, disk_usage, disk_space, status } = server;\n\n\t\t\t\t\t\t\treturn <TableRow>\n\t\t\t\t\t\t\t\t<TableCell>{name}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: status === 'UP' ? 'green' : 'red'\n\t\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t\t>{status}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: disk_usage < 70 ? 'green' : 'red'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{parseFloat(disk_usage.toString()).toFixed(1)}% of {parseInt(disk_space)}GB\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t<Button onClick={this.openServerModal} data-server-index={index}>\n\t\t\t\t\t\t\t\t\t\tmore...\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\n\t\t\t<ServerModal\n\t\t\t\topen={this.state.serverModalOpen}\n\t\t\t\tdata={this.props.servers[this.state.serverIndex]}\n\t\t\t\tclose={this.closeServerModal}\n\t\t\t/>\n\n\t\t</div>\n\t}\n}\n\nfunction mapStateToProps(state) {\n\n\n\treturn {\n\t\tservers: state.servers || []\n\t}\n}\n\nexport default connect(mapStateToProps)(Dashboard);","\nimport Page from './Page';\nimport Uptime from'../components/Uptime'\n\n\nclass Test extends Page {\n\n\n\tstate = {\n\t\tstatus: 'UP',\n\t\t// reset: Date.now(),\n\t\t// last_status_update: Date.now(),\n\t\t// down_time: 0\n\t}\n\n\n\ttoggleStatus() {\n\n\t\tlet { status } = this.state;\n\n\t\tif (status === 'UP')\n\t\t\tstatus = 'DOWN';\n\t\telse\n\t\t\tstatus = 'UP';\n\n\t\tthis._updateState({ status });\n\n\t}\n\n\n\t_render() {\n\n\t\tconst { status } = this.state;\n\n\t\treturn <div>\n\t\t\t<Uptime\n\t\t\t\tstatus={status}\n\t\t\t\treset={new Date()}\n\t\t\t\tlast_status_update={new Date()}\n\t\t\t\tdown_time={0}\n\t\t\t/>\n\n\t\t\t<div>\n\t\t\t\t<b>Status</b>: {status}\n\t\t\t</div>\n\n\t\t\t<button onClick={this.toggleStatus.bind(this)}>\n\t\t\t\tTOGGLE\n\t\t\t</button>\n\t\t</div>\n\t}\n}\n\nexport default  Test;","\n\nimport Component from './Component';\nimport AppBar from '@mui/material/AppBar';\n\n\n\n\nfunction setNavbarHeight() {\n\tconst elem = document.getElementById('appbar');\n\tconst navbarHeight = elem.offsetHeight + 'px';\n\tdocument.documentElement.style.setProperty('--navbar-height', navbarHeight);\n}\n\n\n\nclass Navbar extends Component {\n\n\tcomponentDidMount() {\n\n\n\t\tconst resizeObserver = new ResizeObserver(setNavbarHeight);\n\n\t\tresizeObserver.observe(document.getElementById('appbar'));\n\t\tthis.resizeObserver = resizeObserver;\n\t\tsetNavbarHeight();\n\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.resizeObserver.disconnect();\n\t}\n\n\n\trender() {\n\t\treturn <AppBar id=\"appbar\">\n\t\t\t<h3 style={{ marginLeft: 20 }}>SERVER MANAGEMENT</h3>\n\t\t</AppBar>\n\t}\n}\n\n\nexport default Navbar;","\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Component } from 'react'\n\n// pages\nimport Dashboard from './pages/Dashboard';\nimport Test from './pages/Test';\n\n// components\nimport LoadingIndicator from './components/LoadingIndicator';\nimport Navbar from './components/Navbar';\n\n// stuff\nimport store from './store';\nimport './App.css';\nimport { init as initWebsockets} from './websocket';\n\n\nwindow.App = {};\n\n\nclass App extends Component {\n\n\n\tcomponentDidMount() {\n\t\tinitWebsockets();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\n\t\t\t<Provider store={store}>\n\n\t\t\t\t<Router>\n\n\t\t\t\t\t<LoadingIndicator />\n\t\t\t\t\t<Navbar />\n\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route exact path=\"/\" element={<Dashboard/>} />\n\t\t\t\t\t\t<Route exact path=\"/test\" element={<Test />} />\n\t\t\t\t\t</Routes>\n\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}